name: publish
run-name: "Publish"
on:
  push:
    branches:
      - main
jobs:
  build-app:
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    runs-on: "ubuntu-latest"
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: temurin
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@7c5672355aaa8fde5f97a91aa9a99616d1ace6bc

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@55e685c48d84285a5b0418cd094606e199cca3b6

      - run: "v=$(cat version.txt);echo \"OLD_VERSION=$v\" > $GITHUB_ENV"

      - name: Compile library
        run: "./gradlew --parallel assemble :service:jar"

      - run: "old_changelog=$(cat CHANGELOG.MD); echo \"# ${{ env.VERSION }}\n\n${{ steps.changelog.outputs.changelog }}\n\n$old_changelog\" > CHANGELOG.MD"

      - name: 'Save public key'
        run: 'echo "${{ secrets.PGP_PUBLIC }}" | base64 -d > public_key.pgp'
      - name: 'Save private key'
        run: 'echo "${{ secrets.PGP_PRIVATE }}" | base64 -d > private_key.pgp'

      - name: 'Save GPG secret key'
        run: 'echo "${{ secrets.GPG_SIGNING_KEY }}" | base64 -d > signing_key.gpg'

      - name: 'Publish, deploy and release'
        env:
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_PASSPHRASE }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GIT_ROOT_SEARCH: true
        run: |
          ./gradlew jreleaserConfig service:jreleaserConfig publish service:publish jreleaserFullrelease service:jreleaserFullrelease \
            -PmavenUsername=''${{ secrets.MAVEN_CENTRAL_USERNAME }}'' \
            -PmavenPassword=''${{ secrets.MAVEN_CENTRAL_PASSWORD }}'' \
            -PpublicKeyPath=$(pwd)/public_key.pgp \
            -PprivateKeyPath=$(pwd)/private_key.pgp \
            -Psigning.secretKeyRingFile=$(pwd)/signing_key.gpg \
            -Psigning.password=''${{ secrets.GPG_SIGNING_PASSPHRASE }}'' \
            -Psigning.keyId=${{ secrets.GPG_SIGNING_ID }}

      - name: 'Create tag'
        run: 'git tag ${{ env.VERSION }}'

      - name: 'Push tag'
        run: 'git push origin ${{ env.VERSION }}'

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          comment_mode: failures
          junit_files: |
            **/build/outputs/*-results/**/*.xml
            **/build/*-results/**/*.xml


